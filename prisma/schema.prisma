generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts     Account[]
  listings     Listing[]
  reservations Reservation[]
  Favorite     Favorite[]

  @@map("users")
}

model Favorite {
  id String @id @default(uuid())

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  userId    String
  listingId String

  @@index([userId])
  @@index([listingId])
  @@map("favorites")
}

model Account {
  id                String  @id @default(uuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map("accounts")
}

model Listing {
  id            String   @id @default(uuid())
  title         String
  description   String
  imageSrc      String
  createdAt     DateTime @default(now())
  category      String
  roomCount     Int
  bathroomCount Int
  guestCount    Int
  locationValue String
  price         Int

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  reservations Reservation[]
  favorite     Favorite[]

  @@index([userId])
  @@map("listings")
}

model Reservation {
  id         String   @id @default(uuid())
  startDate  DateTime
  endDate    DateTime
  totalPrice Int
  createdAt  DateTime @default(now())

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  userId    String
  listingId String

  @@index([userId])
  @@index([listingId])
  @@map("reservations")
}
